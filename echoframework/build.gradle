plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC8"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode globalConfiguration["androidVersionCode"]
        testInstrumentationRunner globalConfiguration["testRunner"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

dependencies {
    //Tests
    testImplementation libraryDependencies.jUnit

    //Kotlin
    implementation libraryDependencies.kotlin

    //Libraries
    implementation libraryDependencies.googleGson
    implementation libraryDependencies.socket
    implementation libraryDependencies.guava
    implementation libraryDependencies.spongycastle

    //Code analysis
    detekt libraryDependencies.detekt
}

configurations {
    detekt
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaAndroidTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
    // Use to include or exclude non public members.
    includeNonPublic = false
    noStdlibLink = true

    // Do not output deprecated members. Applies globally, can be overridden by packageOptions
    skipDeprecated = true

    // Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions
    reportUndocumented = false

    cacheRoot = "$rootDir/config/dokka"
}

//detekt task
task analyzeCode(type: JavaExec) {
    main = "io.gitlab.arturbosch.detekt.cli.Main"
    classpath = configurations.detekt
    def input = "$projectDir/src"
    def config = "$rootDir/config/detekt-ruleset.yml"
    def filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
//    def params = ['-i', input, '-c', config, '-f', filters]
    def output = "html:$buildDir/reports/detekt"
    def params = ['-i', input, '-c', config, '-f', filters, '-r', output]
    args(params)
}

check.dependsOn(analyzeCode)

apply from: "$rootDir/config/publish.gradle"